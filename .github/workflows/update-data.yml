name: Update Market Data

on:
  schedule:
    # Run at 9 AM EST weekdays only (before market open)
    - cron: '0 14 * * 1-5'   # 14:00 UTC = 9:00 AM EST (Mon-Fri)
    # Run at 5 PM EST weekdays only (after market close)  
    - cron: '0 22 * * 1-5'   # 22:00 UTC = 5:00 PM EST (Mon-Fri)
  workflow_dispatch:  # Allow manual trigger from GitHub UI
  
permissions:
  contents: write  

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy yfinance requests tqdm python-dateutil scipy lxml
          
      - name: Create data directory structure
        run: |
          mkdir -p data
          mkdir -p data/history
          
      - name: Update market data with error handling
        run: |
          python -c "
          import sys
          import os
          
          try:
              # Import and run directly to avoid argument parsing issues
              from market_tracker import run_cli
              print('Starting market data update...')
              run_cli(consecutive_days=7)
              print('Market data update completed successfully!')
          except Exception as e:
              print(f'Error updating market data: {e}')
              import traceback
              traceback.print_exc()
              sys.exit(1)
          "
          
      - name: Verify data files were created
        run: |
          echo "Checking for data files..."
          ls -la data/ || echo "No data directory found"
          ls -la data/history/ || echo "No history directory found"
          
          # Check for key files
          if [ -f "data/latest_metrics.csv" ]; then
            echo "âœ“ latest_metrics.csv created ($(wc -l < data/latest_metrics.csv) lines)"
          else
            echo "âœ— latest_metrics.csv missing"
          fi
          
          if [ -f "data/rising_7day.csv" ]; then
            echo "âœ“ rising_7day.csv created ($(wc -l < data/rising_7day.csv) lines)"
          else
            echo "âœ— rising_7day.csv missing"
          fi
          
          if [ -f "data/declining_7day.csv" ]; then
            echo "âœ“ declining_7day.csv created ($(wc -l < data/declining_7day.csv) lines)"
          else
            echo "âœ— declining_7day.csv missing"
          fi
          
      - name: Check if data changed
        id: verify-changed-files
        run: |
          # Check git status
          git status --porcelain
          
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Data files have changed"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes in data files"
          fi
          
      - name: Show what changed
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          echo "Files that changed:"
          git status --porcelain
          echo ""
          echo "Git diff summary:"
          git diff --stat
          
      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Bot"
          
          # Add all data files
          git add data/
          
          # Create commit with timestamp and summary
          TIMESTAMP=$(date +'%Y-%m-%d %H:%M UTC')
          CHANGED_FILES=$(git status --porcelain | wc -l)
          
          git commit -m "ðŸ“Š Update market data - ${TIMESTAMP}

          - Updated ${CHANGED_FILES} files
          - Analysis period: 7-day consecutive trends
          - Data source: Yahoo Finance via yfinance"
          
          # Push with retry logic
          for i in {1..3}; do
            if git push; then
              echo "Successfully pushed changes"
              break
            else
              echo "Push attempt $i failed, retrying in 10 seconds..."
              sleep 10
            fi
          done
          
      - name: No changes detected
        if: steps.verify-changed-files.outputs.changed == 'false'
        run: |
          echo "No changes in market data detected"
          echo "This could mean:"
          echo "- Market data hasn't changed since last run"
          echo "- Markets are closed"
          echo "- All data is up to date"
          
      - name: Summary
        if: always()
        run: |
          echo "=== Workflow Summary ==="
          echo "Timestamp: $(date)"
          echo "Data changed: ${{ steps.verify-changed-files.outputs.changed }}"
          
          if [ -f "data/latest_metrics.csv" ]; then
            STOCK_COUNT=$(tail -n +2 data/latest_metrics.csv | wc -l)
            echo "Stocks processed: ${STOCK_COUNT}"
          fi
          
          if [ -f "data/rising_7day.csv" ]; then
            RISING_COUNT=$(tail -n +2 data/rising_7day.csv | wc -l)
            echo "Rising stocks (7-day): ${RISING_COUNT}"
          fi
          
          if [ -f "data/declining_7day.csv" ]; then
            DECLINING_COUNT=$(tail -n +2 data/declining_7day.csv | wc -l)
            echo "Declining stocks (7-day): ${DECLINING_COUNT}"
          fi
